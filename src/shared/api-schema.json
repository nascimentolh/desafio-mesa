{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Desafio Mesa",
    "description": "Desafio Mesa API"
  },
  "servers": [
    {
      "url": "https://mesa-app-challenge.herokuapp.com/",
      "description": "Production Server"
    },
    {
      "url": "http://localhost:3333/",
      "description": "Local server"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "description": "Create a new User",
        "operationId": "createUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email aleardy in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Email address aleardy used",
                  "code": "400",
                  "status": "error"
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "description": "Authenticate the user on the API generating a JWT token",
        "operationId": "authenticateUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuth"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user has been authenticate and the JWT returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Incorret email/password combination",
                  "code": "401",
                  "status": "error"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "description": "Get the profile of the token's owner",
        "operationId": "getUserProfile",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/jwtToken"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "User not found",
                  "code": "404",
                  "error": "Not Found"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update the profile of token's owner",
        "operationId": "updateUserProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/jwtToken"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The user updated information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "jwtToken": {
        "type": "string",
        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTdmZTQ0YzQzYWQwYjAwMThmOGQ5ZmQiLCJuYW1lIjoiV2FsZGVtYXIgTmV0byIsImVtYWlsIjoid2FsZGVtYXJudEBnbWFpbC5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRsUlZjWkc5d0dIVWJXcHF2TnJNR0F1SnNoWWJTR1RLSElQL3NycDlmTlkzZENFZDBJQjN6TyIsImlhdCI6MTU4NTQ0MDUxNywiZXhwIjoxNTg1NDYwNTE3fQ.JNtzLgCKGTAU9_-QjYUNxtM7X4nMU_pPIsNXDsEM-vP"
      },
      "name": {
        "type": "string",
        "example": "John Doe"
      },
      "email": {
        "type": "string",
        "example": "john@mail.com"
      },
      "password": {
        "type": "string",
        "example": "12345#@$$%z"
      },
      "oldPassword": {
        "type": "string",
        "example": "12345#@$$%"
      },
      "id": {
        "type": "string",
        "example": "5e8131eba7768d9e4f06c884"
      },
      "createdAt": {
        "type": "string",
        "example": "2020-12-31T21:25:14.440Z"
      },
      "updatedAt": {
        "type": "string",
        "example": "2020-12-31T21:25:14.440Z"
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "password": {
            "$ref": "#/components/schemas/password"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "password": {
            "$ref": "#/components/schemas/password"
          },
          "old_password": {
            "$ref": "#/components/schemas/oldPassword"
          }
        },
        "required": ["name", "email"]
      },
      "UserAuth": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "password": {
            "$ref": "#/components/schemas/password"
          }
        }
      },
      "UserCreatedResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/name"
              },
              "email": {
                "$ref": "#/components/schemas/email"
              },
              "password": {
                "$ref": "#/components/schemas/password"
              },
              "id": {
                "$ref": "#/components/schemas/id"
              }
            }
          }
        }
      },
      "AuthenticatedUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/name"
              },
              "email": {
                "$ref": "#/components/schemas/email"
              },
              "id": {
                "$ref": "#/components/schemas/id"
              },
              "created_at": {
                "$ref": "#/components/schemas/createdAt"
              },
              "updated_at": {
                "$ref": "#/components/schemas/updatedAt"
              }
            }
          },
          "access_token": {
            "$ref": "#/components/schemas/jwtToken"
          }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "created_at": {
            "$ref": "#/components/schemas/createdAt"
          },
          "updated_at": {
            "$ref": "#/components/schemas/updatedAt"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "number"
          },
          "error": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "documentation": {
            "type": "string"
          }
        }
      }
    }
  }
}
